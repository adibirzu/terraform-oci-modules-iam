# Copyright (c) 2023 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

#---------------------------------------------------------------------------------------------------------------------
# 1. Rename this file to <project-name>.auto.tfvars, where <project-name> is any name of your choice.
# 2. Provide values for "Tenancy Connectivity Variables".

# Each object in the *identity_domains* map is indexed by an uppercase string, like DEV-DOMAIN, QA-DOMAIN, etc. 
# These strings are used by Terraform as keys to the actual managed resources. 
# They can actually be any random strings, but once defined they MUST NOT BE CHANGED, 
# or Terraform will try to destroy and recreate the identity domains.
#---------------------------------------------------------------------------------------------------------------------

#---------------------------------------
# Tenancy Connectivity Variables
#---------------------------------------

tenancy_ocid         = "<tenancy OCID>"             # Get this from OCI Console (after logging in, go to top-right-most menu item and click option "Tenancy: <your tenancy name>").
user_ocid            = "<user OCID>"                # Get this from OCI Console (after logging in, go to top-right-most menu item and click option "My profile").
fingerprint          = "<PEM key fingerprint>"      # The fingerprint can be gathered from your user account. In the "My profile page, click "API keys" on the menu in left hand side).
private_key_path     = "<path to the private key>"  # This is the full path on your local system to the API signing private key.
private_key_password = ""                           # This is the password that protects the private key, if any.
region               = "<your tenancy home region>" # This is your tenancy home region.


#---------------------------------------
# Input variable
#---------------------------------------

identity_domain_identity_providers_configuration = {
    default_identity_domain_id  : "<REPLACE-BY-DOMAIN-OCID>"


  identity_providers = {  
    IDP1 : {   #IDP Configuration using IDP SAM Metadata file
      identity_domain_id = "<REPLACE-BY-DOMAIN-OCID>"
      name : "ID_Provider_1",  
      description : "Identity Provider 1",      
      enabled                   = false,
      idp_metadata_file         = "MetadataIDP1.xml",      #Obtain this file from the IDP Configuration
      name_id_format            = "saml-emailaddress",
      user_mapping_method       = "NameIDToUserAttribute",
      user_mapping_store_attribute = "username"  
    }
    IDP2 : {      # IDP configuration using parameters instead of IDP SAML Metadata.
      identity_domain_id = "<REPLACE-BY-DOMAIN-OCID>"
      name : "ID_Provicer_2", 
      description : "Identity Provider 2",
      enabled                   = false,

      idp_issuer_uri		                  = "<REPLACE-BY-IDP-ENTITY-ID>",
      sso_service_url                     = "<REPLACE-BY-IDP-SSO-URL>",  
      sso_service_binding                 = "<REPLACE-BY-IDP-SERVICE-BINDING>",   #Post or Redirect
      idp_signing_certificate             = "<REPLACE-BY-IDP-SIGNING-CERTIFICATE>",    # Without the BEGIN CERTIFICATE and END CERTIFICATE lines
      enable_global_logout                = true,
      idp_logout_request_url              = "<REPLACE-BY-IDP-LOGOUT-REQUEST-URL>",
      idp_logout_response_url             = "<REPLACE-BY-IDP-LOGOUT-RESPONSE-URL>",
      idp_logout_binding 			            = "<REPLACE-BY-IDP-LOGOUT-BINDING>",    #Post or Redirect
 
      name_id_format                      = "saml-emailaddress",
      user_mapping_method                 = "NameIDToUserAttribute",
      user_mapping_store_attribute        = "username"    
    }
  }
}